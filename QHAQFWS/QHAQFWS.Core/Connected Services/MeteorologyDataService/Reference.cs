//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace QHAQFWS.Core.MeteorologyDataService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Weather_R_SpiDatum", Namespace="http://schemas.datacontract.org/2004/07/ForecastDataSystem.Model")]
    [System.SerializableAttribute()]
    public partial class Weather_R_SpiDatum : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AirPressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AirTempField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ApparentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PubTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> RainfallField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> RelHumidityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WindDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WindSpeedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AirPress {
            get {
                return this.AirPressField;
            }
            set {
                if ((this.AirPressField.Equals(value) != true)) {
                    this.AirPressField = value;
                    this.RaisePropertyChanged("AirPress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AirTemp {
            get {
                return this.AirTempField;
            }
            set {
                if ((this.AirTempField.Equals(value) != true)) {
                    this.AirTempField = value;
                    this.RaisePropertyChanged("AirTemp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Apparent {
            get {
                return this.ApparentField;
            }
            set {
                if ((this.ApparentField.Equals(value) != true)) {
                    this.ApparentField = value;
                    this.RaisePropertyChanged("Apparent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityCode {
            get {
                return this.CityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityCodeField, value) != true)) {
                    this.CityCodeField = value;
                    this.RaisePropertyChanged("CityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComLevel {
            get {
                return this.ComLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.ComLevelField, value) != true)) {
                    this.ComLevelField = value;
                    this.RaisePropertyChanged("ComLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionField, value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Info {
            get {
                return this.InfoField;
            }
            set {
                if ((object.ReferenceEquals(this.InfoField, value) != true)) {
                    this.InfoField = value;
                    this.RaisePropertyChanged("Info");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Power {
            get {
                return this.PowerField;
            }
            set {
                if ((object.ReferenceEquals(this.PowerField, value) != true)) {
                    this.PowerField = value;
                    this.RaisePropertyChanged("Power");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PubTime {
            get {
                return this.PubTimeField;
            }
            set {
                if ((this.PubTimeField.Equals(value) != true)) {
                    this.PubTimeField = value;
                    this.RaisePropertyChanged("PubTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Rainfall {
            get {
                return this.RainfallField;
            }
            set {
                if ((this.RainfallField.Equals(value) != true)) {
                    this.RainfallField = value;
                    this.RaisePropertyChanged("Rainfall");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> RelHumidity {
            get {
                return this.RelHumidityField;
            }
            set {
                if ((this.RelHumidityField.Equals(value) != true)) {
                    this.RelHumidityField = value;
                    this.RaisePropertyChanged("RelHumidity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeedField, value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WindDirection {
            get {
                return this.WindDirectionField;
            }
            set {
                if ((this.WindDirectionField.Equals(value) != true)) {
                    this.WindDirectionField = value;
                    this.RaisePropertyChanged("WindDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WindSpeed {
            get {
                return this.WindSpeedField;
            }
            set {
                if ((this.WindSpeedField.Equals(value) != true)) {
                    this.WindSpeedField = value;
                    this.RaisePropertyChanged("WindSpeed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Weather_H_SpiDatum", Namespace="http://schemas.datacontract.org/2004/07/ForecastDataSystem.Model")]
    [System.SerializableAttribute()]
    public partial class Weather_H_SpiDatum : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AirPressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AirTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ApparentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> RainFallField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RainLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> RelHumidityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TimePointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WindDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WindSpeedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AirPress {
            get {
                return this.AirPressField;
            }
            set {
                if ((this.AirPressField.Equals(value) != true)) {
                    this.AirPressField = value;
                    this.RaisePropertyChanged("AirPress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AirTemperature {
            get {
                return this.AirTemperatureField;
            }
            set {
                if ((this.AirTemperatureField.Equals(value) != true)) {
                    this.AirTemperatureField = value;
                    this.RaisePropertyChanged("AirTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Apparent {
            get {
                return this.ApparentField;
            }
            set {
                if ((this.ApparentField.Equals(value) != true)) {
                    this.ApparentField = value;
                    this.RaisePropertyChanged("Apparent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityCode {
            get {
                return this.CityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityCodeField, value) != true)) {
                    this.CityCodeField = value;
                    this.RaisePropertyChanged("CityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> RainFall {
            get {
                return this.RainFallField;
            }
            set {
                if ((this.RainFallField.Equals(value) != true)) {
                    this.RainFallField = value;
                    this.RaisePropertyChanged("RainFall");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RainLevel {
            get {
                return this.RainLevelField;
            }
            set {
                if ((this.RainLevelField.Equals(value) != true)) {
                    this.RainLevelField = value;
                    this.RaisePropertyChanged("RainLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> RelHumidity {
            get {
                return this.RelHumidityField;
            }
            set {
                if ((this.RelHumidityField.Equals(value) != true)) {
                    this.RelHumidityField = value;
                    this.RaisePropertyChanged("RelHumidity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TimePoint {
            get {
                return this.TimePointField;
            }
            set {
                if ((this.TimePointField.Equals(value) != true)) {
                    this.TimePointField = value;
                    this.RaisePropertyChanged("TimePoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WindDirection {
            get {
                return this.WindDirectionField;
            }
            set {
                if ((this.WindDirectionField.Equals(value) != true)) {
                    this.WindDirectionField = value;
                    this.RaisePropertyChanged("WindDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WindSpeed {
            get {
                return this.WindSpeedField;
            }
            set {
                if ((this.WindSpeedField.Equals(value) != true)) {
                    this.WindSpeedField = value;
                    this.RaisePropertyChanged("WindSpeed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Weather_D_SpiDatum", Namespace="http://schemas.datacontract.org/2004/07/ForecastDataSystem.Model")]
    [System.SerializableAttribute()]
    public partial class Weather_D_SpiDatum : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AirPressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AirTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ApparentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> HighTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> LowTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> RainFallField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RainLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> RelHumidityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TimePointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WindDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WindSpeedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AirPress {
            get {
                return this.AirPressField;
            }
            set {
                if ((this.AirPressField.Equals(value) != true)) {
                    this.AirPressField = value;
                    this.RaisePropertyChanged("AirPress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AirTemperature {
            get {
                return this.AirTemperatureField;
            }
            set {
                if ((this.AirTemperatureField.Equals(value) != true)) {
                    this.AirTemperatureField = value;
                    this.RaisePropertyChanged("AirTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Apparent {
            get {
                return this.ApparentField;
            }
            set {
                if ((this.ApparentField.Equals(value) != true)) {
                    this.ApparentField = value;
                    this.RaisePropertyChanged("Apparent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityCode {
            get {
                return this.CityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityCodeField, value) != true)) {
                    this.CityCodeField = value;
                    this.RaisePropertyChanged("CityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> HighTemperature {
            get {
                return this.HighTemperatureField;
            }
            set {
                if ((this.HighTemperatureField.Equals(value) != true)) {
                    this.HighTemperatureField = value;
                    this.RaisePropertyChanged("HighTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> LowTemperature {
            get {
                return this.LowTemperatureField;
            }
            set {
                if ((this.LowTemperatureField.Equals(value) != true)) {
                    this.LowTemperatureField = value;
                    this.RaisePropertyChanged("LowTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> RainFall {
            get {
                return this.RainFallField;
            }
            set {
                if ((this.RainFallField.Equals(value) != true)) {
                    this.RainFallField = value;
                    this.RaisePropertyChanged("RainFall");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RainLevel {
            get {
                return this.RainLevelField;
            }
            set {
                if ((this.RainLevelField.Equals(value) != true)) {
                    this.RainLevelField = value;
                    this.RaisePropertyChanged("RainLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> RelHumidity {
            get {
                return this.RelHumidityField;
            }
            set {
                if ((this.RelHumidityField.Equals(value) != true)) {
                    this.RelHumidityField = value;
                    this.RaisePropertyChanged("RelHumidity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TimePoint {
            get {
                return this.TimePointField;
            }
            set {
                if ((this.TimePointField.Equals(value) != true)) {
                    this.TimePointField = value;
                    this.RaisePropertyChanged("TimePoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WindDirection {
            get {
                return this.WindDirectionField;
            }
            set {
                if ((this.WindDirectionField.Equals(value) != true)) {
                    this.WindDirectionField = value;
                    this.RaisePropertyChanged("WindDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WindSpeed {
            get {
                return this.WindSpeedField;
            }
            set {
                if ((this.WindSpeedField.Equals(value) != true)) {
                    this.WindSpeedField = value;
                    this.RaisePropertyChanged("WindSpeed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Weather_H_Forecast", Namespace="http://schemas.datacontract.org/2004/07/ForecastDataSystem.Model")]
    [System.SerializableAttribute()]
    public partial class Weather_H_Forecast : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AirPressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AirTempField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CloundCoverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ForTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> RainfallField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> RelativeHumidityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TimePointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> VisibilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeatherPhenomenonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WindDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WindSpeedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AirPress {
            get {
                return this.AirPressField;
            }
            set {
                if ((this.AirPressField.Equals(value) != true)) {
                    this.AirPressField = value;
                    this.RaisePropertyChanged("AirPress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AirTemp {
            get {
                return this.AirTempField;
            }
            set {
                if ((this.AirTempField.Equals(value) != true)) {
                    this.AirTempField = value;
                    this.RaisePropertyChanged("AirTemp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityCode {
            get {
                return this.CityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityCodeField, value) != true)) {
                    this.CityCodeField = value;
                    this.RaisePropertyChanged("CityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CloundCover {
            get {
                return this.CloundCoverField;
            }
            set {
                if ((this.CloundCoverField.Equals(value) != true)) {
                    this.CloundCoverField = value;
                    this.RaisePropertyChanged("CloundCover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ForTime {
            get {
                return this.ForTimeField;
            }
            set {
                if ((this.ForTimeField.Equals(value) != true)) {
                    this.ForTimeField = value;
                    this.RaisePropertyChanged("ForTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Rainfall {
            get {
                return this.RainfallField;
            }
            set {
                if ((this.RainfallField.Equals(value) != true)) {
                    this.RainfallField = value;
                    this.RaisePropertyChanged("Rainfall");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> RelativeHumidity {
            get {
                return this.RelativeHumidityField;
            }
            set {
                if ((this.RelativeHumidityField.Equals(value) != true)) {
                    this.RelativeHumidityField = value;
                    this.RaisePropertyChanged("RelativeHumidity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TimePoint {
            get {
                return this.TimePointField;
            }
            set {
                if ((this.TimePointField.Equals(value) != true)) {
                    this.TimePointField = value;
                    this.RaisePropertyChanged("TimePoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Visibility {
            get {
                return this.VisibilityField;
            }
            set {
                if ((this.VisibilityField.Equals(value) != true)) {
                    this.VisibilityField = value;
                    this.RaisePropertyChanged("Visibility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WeatherPhenomenon {
            get {
                return this.WeatherPhenomenonField;
            }
            set {
                if ((object.ReferenceEquals(this.WeatherPhenomenonField, value) != true)) {
                    this.WeatherPhenomenonField = value;
                    this.RaisePropertyChanged("WeatherPhenomenon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WindDirection {
            get {
                return this.WindDirectionField;
            }
            set {
                if ((this.WindDirectionField.Equals(value) != true)) {
                    this.WindDirectionField = value;
                    this.RaisePropertyChanged("WindDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WindSpeed {
            get {
                return this.WindSpeedField;
            }
            set {
                if ((this.WindSpeedField.Equals(value) != true)) {
                    this.WindSpeedField = value;
                    this.RaisePropertyChanged("WindSpeed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="City_WeatherForecastInfo", Namespace="http://schemas.datacontract.org/2004/07/ForecastDataSystem.Model")]
    [System.SerializableAttribute()]
    public partial class City_WeatherForecastInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AirPressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AirTempField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CloundCoverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Day_AirTempField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Day_ConditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Day_WindDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Day_WindSpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ForTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Night_AirTempField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Night_ConditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Night_WindDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Night_WindSpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> RainFallField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> RelativeHumidityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TimePointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> VisibilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WindDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WindSpeedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AirPress {
            get {
                return this.AirPressField;
            }
            set {
                if ((this.AirPressField.Equals(value) != true)) {
                    this.AirPressField = value;
                    this.RaisePropertyChanged("AirPress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AirTemp {
            get {
                return this.AirTempField;
            }
            set {
                if ((this.AirTempField.Equals(value) != true)) {
                    this.AirTempField = value;
                    this.RaisePropertyChanged("AirTemp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityCode {
            get {
                return this.CityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityCodeField, value) != true)) {
                    this.CityCodeField = value;
                    this.RaisePropertyChanged("CityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CloundCover {
            get {
                return this.CloundCoverField;
            }
            set {
                if ((this.CloundCoverField.Equals(value) != true)) {
                    this.CloundCoverField = value;
                    this.RaisePropertyChanged("CloundCover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Day_AirTemp {
            get {
                return this.Day_AirTempField;
            }
            set {
                if ((this.Day_AirTempField.Equals(value) != true)) {
                    this.Day_AirTempField = value;
                    this.RaisePropertyChanged("Day_AirTemp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Day_Condition {
            get {
                return this.Day_ConditionField;
            }
            set {
                if ((object.ReferenceEquals(this.Day_ConditionField, value) != true)) {
                    this.Day_ConditionField = value;
                    this.RaisePropertyChanged("Day_Condition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Day_WindDirection {
            get {
                return this.Day_WindDirectionField;
            }
            set {
                if ((this.Day_WindDirectionField.Equals(value) != true)) {
                    this.Day_WindDirectionField = value;
                    this.RaisePropertyChanged("Day_WindDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Day_WindSpeed {
            get {
                return this.Day_WindSpeedField;
            }
            set {
                if ((object.ReferenceEquals(this.Day_WindSpeedField, value) != true)) {
                    this.Day_WindSpeedField = value;
                    this.RaisePropertyChanged("Day_WindSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ForTime {
            get {
                return this.ForTimeField;
            }
            set {
                if ((this.ForTimeField.Equals(value) != true)) {
                    this.ForTimeField = value;
                    this.RaisePropertyChanged("ForTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Night_AirTemp {
            get {
                return this.Night_AirTempField;
            }
            set {
                if ((this.Night_AirTempField.Equals(value) != true)) {
                    this.Night_AirTempField = value;
                    this.RaisePropertyChanged("Night_AirTemp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Night_Condition {
            get {
                return this.Night_ConditionField;
            }
            set {
                if ((object.ReferenceEquals(this.Night_ConditionField, value) != true)) {
                    this.Night_ConditionField = value;
                    this.RaisePropertyChanged("Night_Condition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Night_WindDirection {
            get {
                return this.Night_WindDirectionField;
            }
            set {
                if ((this.Night_WindDirectionField.Equals(value) != true)) {
                    this.Night_WindDirectionField = value;
                    this.RaisePropertyChanged("Night_WindDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Night_WindSpeed {
            get {
                return this.Night_WindSpeedField;
            }
            set {
                if ((object.ReferenceEquals(this.Night_WindSpeedField, value) != true)) {
                    this.Night_WindSpeedField = value;
                    this.RaisePropertyChanged("Night_WindSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> RainFall {
            get {
                return this.RainFallField;
            }
            set {
                if ((this.RainFallField.Equals(value) != true)) {
                    this.RainFallField = value;
                    this.RaisePropertyChanged("RainFall");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> RelativeHumidity {
            get {
                return this.RelativeHumidityField;
            }
            set {
                if ((this.RelativeHumidityField.Equals(value) != true)) {
                    this.RelativeHumidityField = value;
                    this.RaisePropertyChanged("RelativeHumidity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TimePoint {
            get {
                return this.TimePointField;
            }
            set {
                if ((this.TimePointField.Equals(value) != true)) {
                    this.TimePointField = value;
                    this.RaisePropertyChanged("TimePoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Visibility {
            get {
                return this.VisibilityField;
            }
            set {
                if ((this.VisibilityField.Equals(value) != true)) {
                    this.VisibilityField = value;
                    this.RaisePropertyChanged("Visibility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WindDirection {
            get {
                return this.WindDirectionField;
            }
            set {
                if ((this.WindDirectionField.Equals(value) != true)) {
                    this.WindDirectionField = value;
                    this.RaisePropertyChanged("WindDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WindSpeed {
            get {
                return this.WindSpeedField;
            }
            set {
                if ((this.WindSpeedField.Equals(value) != true)) {
                    this.WindSpeedField = value;
                    this.RaisePropertyChanged("WindSpeed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GDMOTenDay_ForecastInfo", Namespace="http://schemas.datacontract.org/2004/07/ForecastDataSystem.Model")]
    [System.SerializableAttribute()]
    public partial class GDMOTenDay_ForecastInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForecastInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TimePointField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForecastInfo {
            get {
                return this.ForecastInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ForecastInfoField, value) != true)) {
                    this.ForecastInfoField = value;
                    this.RaisePropertyChanged("ForecastInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Other {
            get {
                return this.OtherField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherField, value) != true)) {
                    this.OtherField = value;
                    this.RaisePropertyChanged("Other");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TimePoint {
            get {
                return this.TimePointField;
            }
            set {
                if ((this.TimePointField.Equals(value) != true)) {
                    this.TimePointField = value;
                    this.RaisePropertyChanged("TimePoint");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageSpiQueue", Namespace="http://schemas.datacontract.org/2004/07/ForecastDataSystem.Model")]
    [System.SerializableAttribute()]
    public partial class ImageSpiQueue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FailTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsBackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsGifField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PlanSpiTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SuccessSpiTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TimePointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailReason {
            get {
                return this.FailReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.FailReasonField, value) != true)) {
                    this.FailReasonField = value;
                    this.RaisePropertyChanged("FailReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FailTime {
            get {
                return this.FailTimeField;
            }
            set {
                if ((this.FailTimeField.Equals(value) != true)) {
                    this.FailTimeField = value;
                    this.RaisePropertyChanged("FailTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageTypeCode {
            get {
                return this.ImageTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageTypeCodeField, value) != true)) {
                    this.ImageTypeCodeField = value;
                    this.RaisePropertyChanged("ImageTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageTypeName {
            get {
                return this.ImageTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageTypeNameField, value) != true)) {
                    this.ImageTypeNameField = value;
                    this.RaisePropertyChanged("ImageTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsBack {
            get {
                return this.IsBackField;
            }
            set {
                if ((this.IsBackField.Equals(value) != true)) {
                    this.IsBackField = value;
                    this.RaisePropertyChanged("IsBack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGif {
            get {
                return this.IsGifField;
            }
            set {
                if ((this.IsGifField.Equals(value) != true)) {
                    this.IsGifField = value;
                    this.RaisePropertyChanged("IsGif");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PlanSpiTime {
            get {
                return this.PlanSpiTimeField;
            }
            set {
                if ((this.PlanSpiTimeField.Equals(value) != true)) {
                    this.PlanSpiTimeField = value;
                    this.RaisePropertyChanged("PlanSpiTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SuccessSpiTime {
            get {
                return this.SuccessSpiTimeField;
            }
            set {
                if ((this.SuccessSpiTimeField.Equals(value) != true)) {
                    this.SuccessSpiTimeField = value;
                    this.RaisePropertyChanged("SuccessSpiTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TimePoint {
            get {
                return this.TimePointField;
            }
            set {
                if ((this.TimePointField.Equals(value) != true)) {
                    this.TimePointField = value;
                    this.RaisePropertyChanged("TimePoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageCommandConfig", Namespace="http://schemas.datacontract.org/2004/07/ForecastDataSystem.Model")]
    [System.SerializableAttribute()]
    public partial class ImageCommandConfig : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AutoBackTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HPaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageAttributeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsGifField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListFormatterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListInterval1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListInterval1CriticalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListMinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListParameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresentTimeFormatterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresentTimeParameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TimePointSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UTCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlFormatterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlParameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ValidateTimeWidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AutoBackTime {
            get {
                return this.AutoBackTimeField;
            }
            set {
                if ((this.AutoBackTimeField.Equals(value) != true)) {
                    this.AutoBackTimeField = value;
                    this.RaisePropertyChanged("AutoBackTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeField, value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HPa {
            get {
                return this.HPaField;
            }
            set {
                if ((object.ReferenceEquals(this.HPaField, value) != true)) {
                    this.HPaField = value;
                    this.RaisePropertyChanged("HPa");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageAttribute {
            get {
                return this.ImageAttributeField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageAttributeField, value) != true)) {
                    this.ImageAttributeField = value;
                    this.RaisePropertyChanged("ImageAttribute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageTypeCode {
            get {
                return this.ImageTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageTypeCodeField, value) != true)) {
                    this.ImageTypeCodeField = value;
                    this.RaisePropertyChanged("ImageTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageTypeName {
            get {
                return this.ImageTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageTypeNameField, value) != true)) {
                    this.ImageTypeNameField = value;
                    this.RaisePropertyChanged("ImageTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGif {
            get {
                return this.IsGifField;
            }
            set {
                if ((this.IsGifField.Equals(value) != true)) {
                    this.IsGifField = value;
                    this.RaisePropertyChanged("IsGif");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListFormatter {
            get {
                return this.ListFormatterField;
            }
            set {
                if ((object.ReferenceEquals(this.ListFormatterField, value) != true)) {
                    this.ListFormatterField = value;
                    this.RaisePropertyChanged("ListFormatter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListInterval {
            get {
                return this.ListIntervalField;
            }
            set {
                if ((object.ReferenceEquals(this.ListIntervalField, value) != true)) {
                    this.ListIntervalField = value;
                    this.RaisePropertyChanged("ListInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListInterval1 {
            get {
                return this.ListInterval1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ListInterval1Field, value) != true)) {
                    this.ListInterval1Field = value;
                    this.RaisePropertyChanged("ListInterval1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListInterval1Critical {
            get {
                return this.ListInterval1CriticalField;
            }
            set {
                if ((object.ReferenceEquals(this.ListInterval1CriticalField, value) != true)) {
                    this.ListInterval1CriticalField = value;
                    this.RaisePropertyChanged("ListInterval1Critical");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListMax {
            get {
                return this.ListMaxField;
            }
            set {
                if ((object.ReferenceEquals(this.ListMaxField, value) != true)) {
                    this.ListMaxField = value;
                    this.RaisePropertyChanged("ListMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListMin {
            get {
                return this.ListMinField;
            }
            set {
                if ((object.ReferenceEquals(this.ListMinField, value) != true)) {
                    this.ListMinField = value;
                    this.RaisePropertyChanged("ListMin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListParameter {
            get {
                return this.ListParameterField;
            }
            set {
                if ((object.ReferenceEquals(this.ListParameterField, value) != true)) {
                    this.ListParameterField = value;
                    this.RaisePropertyChanged("ListParameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Other {
            get {
                return this.OtherField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherField, value) != true)) {
                    this.OtherField = value;
                    this.RaisePropertyChanged("Other");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresentTimeFormatter {
            get {
                return this.PresentTimeFormatterField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentTimeFormatterField, value) != true)) {
                    this.PresentTimeFormatterField = value;
                    this.RaisePropertyChanged("PresentTimeFormatter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresentTimeParameter {
            get {
                return this.PresentTimeParameterField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentTimeParameterField, value) != true)) {
                    this.PresentTimeParameterField = value;
                    this.RaisePropertyChanged("PresentTimeParameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TimePointSystem {
            get {
                return this.TimePointSystemField;
            }
            set {
                if ((this.TimePointSystemField.Equals(value) != true)) {
                    this.TimePointSystemField = value;
                    this.RaisePropertyChanged("TimePointSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UTC {
            get {
                return this.UTCField;
            }
            set {
                if ((object.ReferenceEquals(this.UTCField, value) != true)) {
                    this.UTCField = value;
                    this.RaisePropertyChanged("UTC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UrlFormatter {
            get {
                return this.UrlFormatterField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlFormatterField, value) != true)) {
                    this.UrlFormatterField = value;
                    this.RaisePropertyChanged("UrlFormatter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UrlParameter {
            get {
                return this.UrlParameterField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlParameterField, value) != true)) {
                    this.UrlParameterField = value;
                    this.RaisePropertyChanged("UrlParameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ValidateTimeWidth {
            get {
                return this.ValidateTimeWidthField;
            }
            set {
                if ((this.ValidateTimeWidthField.Equals(value) != true)) {
                    this.ValidateTimeWidthField = value;
                    this.RaisePropertyChanged("ValidateTimeWidth");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrajectoryPic", Namespace="http://schemas.datacontract.org/2004/07/ForecastDataSystem.Model")]
    [System.SerializableAttribute()]
    public partial class TrajectoryPic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FailTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ForTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimePointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityCode {
            get {
                return this.CityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityCodeField, value) != true)) {
                    this.CityCodeField = value;
                    this.RaisePropertyChanged("CityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailReason {
            get {
                return this.FailReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.FailReasonField, value) != true)) {
                    this.FailReasonField = value;
                    this.RaisePropertyChanged("FailReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FailTime {
            get {
                return this.FailTimeField;
            }
            set {
                if ((this.FailTimeField.Equals(value) != true)) {
                    this.FailTimeField = value;
                    this.RaisePropertyChanged("FailTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ForTime {
            get {
                return this.ForTimeField;
            }
            set {
                if ((this.ForTimeField.Equals(value) != true)) {
                    this.ForTimeField = value;
                    this.RaisePropertyChanged("ForTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageTypeCode {
            get {
                return this.ImageTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageTypeCodeField, value) != true)) {
                    this.ImageTypeCodeField = value;
                    this.RaisePropertyChanged("ImageTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageTypeName {
            get {
                return this.ImageTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageTypeNameField, value) != true)) {
                    this.ImageTypeNameField = value;
                    this.RaisePropertyChanged("ImageTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimePoint {
            get {
                return this.TimePointField;
            }
            set {
                if ((this.TimePointField.Equals(value) != true)) {
                    this.TimePointField = value;
                    this.RaisePropertyChanged("TimePoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NMCCity", Namespace="http://schemas.datacontract.org/2004/07/ForecastDataSystem.Model")]
    [System.SerializableAttribute()]
    public partial class NMCCity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNamePYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> LatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> LonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceAJCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrajectoriesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityCode {
            get {
                return this.CityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityCodeField, value) != true)) {
                    this.CityCodeField = value;
                    this.RaisePropertyChanged("CityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityNamePY {
            get {
                return this.CityNamePYField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNamePYField, value) != true)) {
                    this.CityNamePYField = value;
                    this.RaisePropertyChanged("CityNamePY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Lat {
            get {
                return this.LatField;
            }
            set {
                if ((this.LatField.Equals(value) != true)) {
                    this.LatField = value;
                    this.RaisePropertyChanged("Lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Lon {
            get {
                return this.LonField;
            }
            set {
                if ((this.LonField.Equals(value) != true)) {
                    this.LonField = value;
                    this.RaisePropertyChanged("Lon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvinceAJC {
            get {
                return this.ProvinceAJCField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceAJCField, value) != true)) {
                    this.ProvinceAJCField = value;
                    this.RaisePropertyChanged("ProvinceAJC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StationCode {
            get {
                return this.StationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StationCodeField, value) != true)) {
                    this.StationCodeField = value;
                    this.RaisePropertyChanged("StationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Trajectories {
            get {
                return this.TrajectoriesField;
            }
            set {
                if ((this.TrajectoriesField.Equals(value) != true)) {
                    this.TrajectoriesField = value;
                    this.RaisePropertyChanged("Trajectories");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NationCityPollutantForecast", Namespace="http://schemas.datacontract.org/2004/07/ForecastDataSystem.Model")]
    [System.SerializableAttribute()]
    public partial class NationCityPollutantForecast : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AQIHighField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AQILevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AQILowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowPublishField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AuditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForecastPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ForecastTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HealthTipsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPublishField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MapPathsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NationCityPollutantForecastIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryPollutantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PublishDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReceiveTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarningInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AQIHigh {
            get {
                return this.AQIHighField;
            }
            set {
                if ((object.ReferenceEquals(this.AQIHighField, value) != true)) {
                    this.AQIHighField = value;
                    this.RaisePropertyChanged("AQIHigh");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AQILevel {
            get {
                return this.AQILevelField;
            }
            set {
                if ((object.ReferenceEquals(this.AQILevelField, value) != true)) {
                    this.AQILevelField = value;
                    this.RaisePropertyChanged("AQILevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AQILow {
            get {
                return this.AQILowField;
            }
            set {
                if ((object.ReferenceEquals(this.AQILowField, value) != true)) {
                    this.AQILowField = value;
                    this.RaisePropertyChanged("AQILow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowPublish {
            get {
                return this.AllowPublishField;
            }
            set {
                if ((this.AllowPublishField.Equals(value) != true)) {
                    this.AllowPublishField = value;
                    this.RaisePropertyChanged("AllowPublish");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AuditDate {
            get {
                return this.AuditDateField;
            }
            set {
                if ((this.AuditDateField.Equals(value) != true)) {
                    this.AuditDateField = value;
                    this.RaisePropertyChanged("AuditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityCode {
            get {
                return this.CityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityCodeField, value) != true)) {
                    this.CityCodeField = value;
                    this.RaisePropertyChanged("CityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailInfo {
            get {
                return this.DetailInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailInfoField, value) != true)) {
                    this.DetailInfoField = value;
                    this.RaisePropertyChanged("DetailInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForecastPerson {
            get {
                return this.ForecastPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.ForecastPersonField, value) != true)) {
                    this.ForecastPersonField = value;
                    this.RaisePropertyChanged("ForecastPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ForecastType {
            get {
                return this.ForecastTypeField;
            }
            set {
                if ((this.ForecastTypeField.Equals(value) != true)) {
                    this.ForecastTypeField = value;
                    this.RaisePropertyChanged("ForecastType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HealthTips {
            get {
                return this.HealthTipsField;
            }
            set {
                if ((object.ReferenceEquals(this.HealthTipsField, value) != true)) {
                    this.HealthTipsField = value;
                    this.RaisePropertyChanged("HealthTips");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPublish {
            get {
                return this.IsPublishField;
            }
            set {
                if ((this.IsPublishField.Equals(value) != true)) {
                    this.IsPublishField = value;
                    this.RaisePropertyChanged("IsPublish");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MapPaths {
            get {
                return this.MapPathsField;
            }
            set {
                if ((object.ReferenceEquals(this.MapPathsField, value) != true)) {
                    this.MapPathsField = value;
                    this.RaisePropertyChanged("MapPaths");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NationCityPollutantForecastId {
            get {
                return this.NationCityPollutantForecastIdField;
            }
            set {
                if ((this.NationCityPollutantForecastIdField.Equals(value) != true)) {
                    this.NationCityPollutantForecastIdField = value;
                    this.RaisePropertyChanged("NationCityPollutantForecastId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryPollutant {
            get {
                return this.PrimaryPollutantField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryPollutantField, value) != true)) {
                    this.PrimaryPollutantField = value;
                    this.RaisePropertyChanged("PrimaryPollutant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PublishDate {
            get {
                return this.PublishDateField;
            }
            set {
                if ((this.PublishDateField.Equals(value) != true)) {
                    this.PublishDateField = value;
                    this.RaisePropertyChanged("PublishDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReceiveTime {
            get {
                return this.ReceiveTimeField;
            }
            set {
                if ((this.ReceiveTimeField.Equals(value) != true)) {
                    this.ReceiveTimeField = value;
                    this.RaisePropertyChanged("ReceiveTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarningInfo {
            get {
                return this.WarningInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.WarningInfoField, value) != true)) {
                    this.WarningInfoField = value;
                    this.RaisePropertyChanged("WarningInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NationProvincePollutantForecast", Namespace="http://schemas.datacontract.org/2004/07/ForecastDataSystem.Model")]
    [System.SerializableAttribute()]
    public partial class NationProvincePollutantForecast : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowPublishField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AuditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForecastDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForecastPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ForecastTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HealthTipsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPublishField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NationProvincePollutantForecastIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PublishDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReceiveTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrendImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarningInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowPublish {
            get {
                return this.AllowPublishField;
            }
            set {
                if ((this.AllowPublishField.Equals(value) != true)) {
                    this.AllowPublishField = value;
                    this.RaisePropertyChanged("AllowPublish");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AuditDate {
            get {
                return this.AuditDateField;
            }
            set {
                if ((this.AuditDateField.Equals(value) != true)) {
                    this.AuditDateField = value;
                    this.RaisePropertyChanged("AuditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForecastDescription {
            get {
                return this.ForecastDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ForecastDescriptionField, value) != true)) {
                    this.ForecastDescriptionField = value;
                    this.RaisePropertyChanged("ForecastDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForecastPerson {
            get {
                return this.ForecastPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.ForecastPersonField, value) != true)) {
                    this.ForecastPersonField = value;
                    this.RaisePropertyChanged("ForecastPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ForecastType {
            get {
                return this.ForecastTypeField;
            }
            set {
                if ((this.ForecastTypeField.Equals(value) != true)) {
                    this.ForecastTypeField = value;
                    this.RaisePropertyChanged("ForecastType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HealthTips {
            get {
                return this.HealthTipsField;
            }
            set {
                if ((object.ReferenceEquals(this.HealthTipsField, value) != true)) {
                    this.HealthTipsField = value;
                    this.RaisePropertyChanged("HealthTips");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPublish {
            get {
                return this.IsPublishField;
            }
            set {
                if ((this.IsPublishField.Equals(value) != true)) {
                    this.IsPublishField = value;
                    this.RaisePropertyChanged("IsPublish");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NationProvincePollutantForecastId {
            get {
                return this.NationProvincePollutantForecastIdField;
            }
            set {
                if ((this.NationProvincePollutantForecastIdField.Equals(value) != true)) {
                    this.NationProvincePollutantForecastIdField = value;
                    this.RaisePropertyChanged("NationProvincePollutantForecastId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherDescription {
            get {
                return this.OtherDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherDescriptionField, value) != true)) {
                    this.OtherDescriptionField = value;
                    this.RaisePropertyChanged("OtherDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvinceCode {
            get {
                return this.ProvinceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceCodeField, value) != true)) {
                    this.ProvinceCodeField = value;
                    this.RaisePropertyChanged("ProvinceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PublishDate {
            get {
                return this.PublishDateField;
            }
            set {
                if ((this.PublishDateField.Equals(value) != true)) {
                    this.PublishDateField = value;
                    this.RaisePropertyChanged("PublishDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReceiveTime {
            get {
                return this.ReceiveTimeField;
            }
            set {
                if ((this.ReceiveTimeField.Equals(value) != true)) {
                    this.ReceiveTimeField = value;
                    this.RaisePropertyChanged("ReceiveTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrendImage {
            get {
                return this.TrendImageField;
            }
            set {
                if ((object.ReferenceEquals(this.TrendImageField, value) != true)) {
                    this.TrendImageField = value;
                    this.RaisePropertyChanged("TrendImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarningInfo {
            get {
                return this.WarningInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.WarningInfoField, value) != true)) {
                    this.WarningInfoField = value;
                    this.RaisePropertyChanged("WarningInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StationHourData", Namespace="http://schemas.datacontract.org/2004/07/ForecastDataSystem.WCF.Models")]
    [System.SerializableAttribute()]
    public partial class StationHourData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AQIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CO_24hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeasureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NO2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NO2_24hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string O3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string O3_24hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string O3_8hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string O3_8h_24hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM10_24hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM2_5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM2_5_24hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryPollutantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SO2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SO2_24hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimePointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnheathfulField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AQI {
            get {
                return this.AQIField;
            }
            set {
                if ((object.ReferenceEquals(this.AQIField, value) != true)) {
                    this.AQIField = value;
                    this.RaisePropertyChanged("AQI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CO {
            get {
                return this.COField;
            }
            set {
                if ((object.ReferenceEquals(this.COField, value) != true)) {
                    this.COField = value;
                    this.RaisePropertyChanged("CO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CO_24h {
            get {
                return this.CO_24hField;
            }
            set {
                if ((object.ReferenceEquals(this.CO_24hField, value) != true)) {
                    this.CO_24hField = value;
                    this.RaisePropertyChanged("CO_24h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Measure {
            get {
                return this.MeasureField;
            }
            set {
                if ((object.ReferenceEquals(this.MeasureField, value) != true)) {
                    this.MeasureField = value;
                    this.RaisePropertyChanged("Measure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NO2 {
            get {
                return this.NO2Field;
            }
            set {
                if ((object.ReferenceEquals(this.NO2Field, value) != true)) {
                    this.NO2Field = value;
                    this.RaisePropertyChanged("NO2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NO2_24h {
            get {
                return this.NO2_24hField;
            }
            set {
                if ((object.ReferenceEquals(this.NO2_24hField, value) != true)) {
                    this.NO2_24hField = value;
                    this.RaisePropertyChanged("NO2_24h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string O3 {
            get {
                return this.O3Field;
            }
            set {
                if ((object.ReferenceEquals(this.O3Field, value) != true)) {
                    this.O3Field = value;
                    this.RaisePropertyChanged("O3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string O3_24h {
            get {
                return this.O3_24hField;
            }
            set {
                if ((object.ReferenceEquals(this.O3_24hField, value) != true)) {
                    this.O3_24hField = value;
                    this.RaisePropertyChanged("O3_24h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string O3_8h {
            get {
                return this.O3_8hField;
            }
            set {
                if ((object.ReferenceEquals(this.O3_8hField, value) != true)) {
                    this.O3_8hField = value;
                    this.RaisePropertyChanged("O3_8h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string O3_8h_24h {
            get {
                return this.O3_8h_24hField;
            }
            set {
                if ((object.ReferenceEquals(this.O3_8h_24hField, value) != true)) {
                    this.O3_8h_24hField = value;
                    this.RaisePropertyChanged("O3_8h_24h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM10 {
            get {
                return this.PM10Field;
            }
            set {
                if ((object.ReferenceEquals(this.PM10Field, value) != true)) {
                    this.PM10Field = value;
                    this.RaisePropertyChanged("PM10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM10_24h {
            get {
                return this.PM10_24hField;
            }
            set {
                if ((object.ReferenceEquals(this.PM10_24hField, value) != true)) {
                    this.PM10_24hField = value;
                    this.RaisePropertyChanged("PM10_24h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM2_5 {
            get {
                return this.PM2_5Field;
            }
            set {
                if ((object.ReferenceEquals(this.PM2_5Field, value) != true)) {
                    this.PM2_5Field = value;
                    this.RaisePropertyChanged("PM2_5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM2_5_24h {
            get {
                return this.PM2_5_24hField;
            }
            set {
                if ((object.ReferenceEquals(this.PM2_5_24hField, value) != true)) {
                    this.PM2_5_24hField = value;
                    this.RaisePropertyChanged("PM2_5_24h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PositionName {
            get {
                return this.PositionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionNameField, value) != true)) {
                    this.PositionNameField = value;
                    this.RaisePropertyChanged("PositionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryPollutant {
            get {
                return this.PrimaryPollutantField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryPollutantField, value) != true)) {
                    this.PrimaryPollutantField = value;
                    this.RaisePropertyChanged("PrimaryPollutant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityField, value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SO2 {
            get {
                return this.SO2Field;
            }
            set {
                if ((object.ReferenceEquals(this.SO2Field, value) != true)) {
                    this.SO2Field = value;
                    this.RaisePropertyChanged("SO2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SO2_24h {
            get {
                return this.SO2_24hField;
            }
            set {
                if ((object.ReferenceEquals(this.SO2_24hField, value) != true)) {
                    this.SO2_24hField = value;
                    this.RaisePropertyChanged("SO2_24h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StationCode {
            get {
                return this.StationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StationCodeField, value) != true)) {
                    this.StationCodeField = value;
                    this.RaisePropertyChanged("StationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimePoint {
            get {
                return this.TimePointField;
            }
            set {
                if ((this.TimePointField.Equals(value) != true)) {
                    this.TimePointField = value;
                    this.RaisePropertyChanged("TimePoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unheathful {
            get {
                return this.UnheathfulField;
            }
            set {
                if ((object.ReferenceEquals(this.UnheathfulField, value) != true)) {
                    this.UnheathfulField = value;
                    this.RaisePropertyChanged("Unheathful");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CityHourData", Namespace="http://schemas.datacontract.org/2004/07/ForecastDataSystem.WCF.Models")]
    [System.SerializableAttribute()]
    public partial class CityHourData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AQIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DescRankInCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DescRankInProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeasureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NO2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string O3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM2_5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryPollutantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RankInCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RankInProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SO2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimePointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnheathfulField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AQI {
            get {
                return this.AQIField;
            }
            set {
                if ((object.ReferenceEquals(this.AQIField, value) != true)) {
                    this.AQIField = value;
                    this.RaisePropertyChanged("AQI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CO {
            get {
                return this.COField;
            }
            set {
                if ((object.ReferenceEquals(this.COField, value) != true)) {
                    this.COField = value;
                    this.RaisePropertyChanged("CO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityCode {
            get {
                return this.CityCodeField;
            }
            set {
                if ((this.CityCodeField.Equals(value) != true)) {
                    this.CityCodeField = value;
                    this.RaisePropertyChanged("CityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DescRankInCountry {
            get {
                return this.DescRankInCountryField;
            }
            set {
                if ((this.DescRankInCountryField.Equals(value) != true)) {
                    this.DescRankInCountryField = value;
                    this.RaisePropertyChanged("DescRankInCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DescRankInProvince {
            get {
                return this.DescRankInProvinceField;
            }
            set {
                if ((this.DescRankInProvinceField.Equals(value) != true)) {
                    this.DescRankInProvinceField = value;
                    this.RaisePropertyChanged("DescRankInProvince");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Measure {
            get {
                return this.MeasureField;
            }
            set {
                if ((object.ReferenceEquals(this.MeasureField, value) != true)) {
                    this.MeasureField = value;
                    this.RaisePropertyChanged("Measure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NO2 {
            get {
                return this.NO2Field;
            }
            set {
                if ((object.ReferenceEquals(this.NO2Field, value) != true)) {
                    this.NO2Field = value;
                    this.RaisePropertyChanged("NO2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string O3 {
            get {
                return this.O3Field;
            }
            set {
                if ((object.ReferenceEquals(this.O3Field, value) != true)) {
                    this.O3Field = value;
                    this.RaisePropertyChanged("O3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM10 {
            get {
                return this.PM10Field;
            }
            set {
                if ((object.ReferenceEquals(this.PM10Field, value) != true)) {
                    this.PM10Field = value;
                    this.RaisePropertyChanged("PM10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM2_5 {
            get {
                return this.PM2_5Field;
            }
            set {
                if ((object.ReferenceEquals(this.PM2_5Field, value) != true)) {
                    this.PM2_5Field = value;
                    this.RaisePropertyChanged("PM2_5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryPollutant {
            get {
                return this.PrimaryPollutantField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryPollutantField, value) != true)) {
                    this.PrimaryPollutantField = value;
                    this.RaisePropertyChanged("PrimaryPollutant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityField, value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RankInCountry {
            get {
                return this.RankInCountryField;
            }
            set {
                if ((this.RankInCountryField.Equals(value) != true)) {
                    this.RankInCountryField = value;
                    this.RaisePropertyChanged("RankInCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RankInProvince {
            get {
                return this.RankInProvinceField;
            }
            set {
                if ((this.RankInProvinceField.Equals(value) != true)) {
                    this.RankInProvinceField = value;
                    this.RaisePropertyChanged("RankInProvince");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SO2 {
            get {
                return this.SO2Field;
            }
            set {
                if ((object.ReferenceEquals(this.SO2Field, value) != true)) {
                    this.SO2Field = value;
                    this.RaisePropertyChanged("SO2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimePoint {
            get {
                return this.TimePointField;
            }
            set {
                if ((this.TimePointField.Equals(value) != true)) {
                    this.TimePointField = value;
                    this.RaisePropertyChanged("TimePoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unheathful {
            get {
                return this.UnheathfulField;
            }
            set {
                if ((object.ReferenceEquals(this.UnheathfulField, value) != true)) {
                    this.UnheathfulField = value;
                    this.RaisePropertyChanged("Unheathful");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CityDayData", Namespace="http://schemas.datacontract.org/2004/07/ForecastDataSystem.WCF.Models")]
    [System.SerializableAttribute()]
    public partial class CityDayData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AQIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CO_24hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DescRankInCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DescRankInProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeasureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NO2_24hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string O3_8h_24hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM10_24hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM2_5_24hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryPollutantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RankInCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RankInProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SO2_24hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimePointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnheathfulField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AQI {
            get {
                return this.AQIField;
            }
            set {
                if ((object.ReferenceEquals(this.AQIField, value) != true)) {
                    this.AQIField = value;
                    this.RaisePropertyChanged("AQI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CO_24h {
            get {
                return this.CO_24hField;
            }
            set {
                if ((object.ReferenceEquals(this.CO_24hField, value) != true)) {
                    this.CO_24hField = value;
                    this.RaisePropertyChanged("CO_24h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityCode {
            get {
                return this.CityCodeField;
            }
            set {
                if ((this.CityCodeField.Equals(value) != true)) {
                    this.CityCodeField = value;
                    this.RaisePropertyChanged("CityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DescRankInCountry {
            get {
                return this.DescRankInCountryField;
            }
            set {
                if ((this.DescRankInCountryField.Equals(value) != true)) {
                    this.DescRankInCountryField = value;
                    this.RaisePropertyChanged("DescRankInCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DescRankInProvince {
            get {
                return this.DescRankInProvinceField;
            }
            set {
                if ((this.DescRankInProvinceField.Equals(value) != true)) {
                    this.DescRankInProvinceField = value;
                    this.RaisePropertyChanged("DescRankInProvince");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Measure {
            get {
                return this.MeasureField;
            }
            set {
                if ((object.ReferenceEquals(this.MeasureField, value) != true)) {
                    this.MeasureField = value;
                    this.RaisePropertyChanged("Measure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NO2_24h {
            get {
                return this.NO2_24hField;
            }
            set {
                if ((object.ReferenceEquals(this.NO2_24hField, value) != true)) {
                    this.NO2_24hField = value;
                    this.RaisePropertyChanged("NO2_24h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string O3_8h_24h {
            get {
                return this.O3_8h_24hField;
            }
            set {
                if ((object.ReferenceEquals(this.O3_8h_24hField, value) != true)) {
                    this.O3_8h_24hField = value;
                    this.RaisePropertyChanged("O3_8h_24h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM10_24h {
            get {
                return this.PM10_24hField;
            }
            set {
                if ((object.ReferenceEquals(this.PM10_24hField, value) != true)) {
                    this.PM10_24hField = value;
                    this.RaisePropertyChanged("PM10_24h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM2_5_24h {
            get {
                return this.PM2_5_24hField;
            }
            set {
                if ((object.ReferenceEquals(this.PM2_5_24hField, value) != true)) {
                    this.PM2_5_24hField = value;
                    this.RaisePropertyChanged("PM2_5_24h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryPollutant {
            get {
                return this.PrimaryPollutantField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryPollutantField, value) != true)) {
                    this.PrimaryPollutantField = value;
                    this.RaisePropertyChanged("PrimaryPollutant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityField, value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RankInCountry {
            get {
                return this.RankInCountryField;
            }
            set {
                if ((this.RankInCountryField.Equals(value) != true)) {
                    this.RankInCountryField = value;
                    this.RaisePropertyChanged("RankInCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RankInProvince {
            get {
                return this.RankInProvinceField;
            }
            set {
                if ((this.RankInProvinceField.Equals(value) != true)) {
                    this.RankInProvinceField = value;
                    this.RaisePropertyChanged("RankInProvince");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SO2_24h {
            get {
                return this.SO2_24hField;
            }
            set {
                if ((object.ReferenceEquals(this.SO2_24hField, value) != true)) {
                    this.SO2_24hField = value;
                    this.RaisePropertyChanged("SO2_24h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimePoint {
            get {
                return this.TimePointField;
            }
            set {
                if ((this.TimePointField.Equals(value) != true)) {
                    this.TimePointField = value;
                    this.RaisePropertyChanged("TimePoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unheathful {
            get {
                return this.UnheathfulField;
            }
            set {
                if ((object.ReferenceEquals(this.UnheathfulField, value) != true)) {
                    this.UnheathfulField = value;
                    this.RaisePropertyChanged("Unheathful");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Air_hour_AQI_Src", Namespace="http://schemas.datacontract.org/2004/07/ForecastDataSystem.Model")]
    [System.SerializableAttribute()]
    public partial class Air_hour_AQI_Src : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AQIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> COField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CO_MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> NO2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NO2_MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> O3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string O3_MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PM10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM10_MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PM2_5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM2_5_MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryPollutantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> SO2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SO2_MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimePointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AQI {
            get {
                return this.AQIField;
            }
            set {
                if ((this.AQIField.Equals(value) != true)) {
                    this.AQIField = value;
                    this.RaisePropertyChanged("AQI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CO {
            get {
                return this.COField;
            }
            set {
                if ((this.COField.Equals(value) != true)) {
                    this.COField = value;
                    this.RaisePropertyChanged("CO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CO_Mark {
            get {
                return this.CO_MarkField;
            }
            set {
                if ((object.ReferenceEquals(this.CO_MarkField, value) != true)) {
                    this.CO_MarkField = value;
                    this.RaisePropertyChanged("CO_Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> NO2 {
            get {
                return this.NO2Field;
            }
            set {
                if ((this.NO2Field.Equals(value) != true)) {
                    this.NO2Field = value;
                    this.RaisePropertyChanged("NO2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NO2_Mark {
            get {
                return this.NO2_MarkField;
            }
            set {
                if ((object.ReferenceEquals(this.NO2_MarkField, value) != true)) {
                    this.NO2_MarkField = value;
                    this.RaisePropertyChanged("NO2_Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> O3 {
            get {
                return this.O3Field;
            }
            set {
                if ((this.O3Field.Equals(value) != true)) {
                    this.O3Field = value;
                    this.RaisePropertyChanged("O3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string O3_Mark {
            get {
                return this.O3_MarkField;
            }
            set {
                if ((object.ReferenceEquals(this.O3_MarkField, value) != true)) {
                    this.O3_MarkField = value;
                    this.RaisePropertyChanged("O3_Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PM10 {
            get {
                return this.PM10Field;
            }
            set {
                if ((this.PM10Field.Equals(value) != true)) {
                    this.PM10Field = value;
                    this.RaisePropertyChanged("PM10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM10_Mark {
            get {
                return this.PM10_MarkField;
            }
            set {
                if ((object.ReferenceEquals(this.PM10_MarkField, value) != true)) {
                    this.PM10_MarkField = value;
                    this.RaisePropertyChanged("PM10_Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PM2_5 {
            get {
                return this.PM2_5Field;
            }
            set {
                if ((this.PM2_5Field.Equals(value) != true)) {
                    this.PM2_5Field = value;
                    this.RaisePropertyChanged("PM2_5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM2_5_Mark {
            get {
                return this.PM2_5_MarkField;
            }
            set {
                if ((object.ReferenceEquals(this.PM2_5_MarkField, value) != true)) {
                    this.PM2_5_MarkField = value;
                    this.RaisePropertyChanged("PM2_5_Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryPollutant {
            get {
                return this.PrimaryPollutantField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryPollutantField, value) != true)) {
                    this.PrimaryPollutantField = value;
                    this.RaisePropertyChanged("PrimaryPollutant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> SO2 {
            get {
                return this.SO2Field;
            }
            set {
                if ((this.SO2Field.Equals(value) != true)) {
                    this.SO2Field = value;
                    this.RaisePropertyChanged("SO2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SO2_Mark {
            get {
                return this.SO2_MarkField;
            }
            set {
                if ((object.ReferenceEquals(this.SO2_MarkField, value) != true)) {
                    this.SO2_MarkField = value;
                    this.RaisePropertyChanged("SO2_Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StationCode {
            get {
                return this.StationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StationCodeField, value) != true)) {
                    this.StationCodeField = value;
                    this.RaisePropertyChanged("StationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimePoint {
            get {
                return this.TimePointField;
            }
            set {
                if ((this.TimePointField.Equals(value) != true)) {
                    this.TimePointField = value;
                    this.RaisePropertyChanged("TimePoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Air_day_AQI_Src", Namespace="http://schemas.datacontract.org/2004/07/ForecastDataSystem.Model")]
    [System.SerializableAttribute()]
    public partial class Air_day_AQI_Src : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AQIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> COField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CO_MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> NO2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NO2_MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> O3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> O3_8hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string O3_8h_MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string O3_MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PM10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM10_MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PM2_5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM2_5_MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryPollutantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> SO2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SO2_MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimePointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AQI {
            get {
                return this.AQIField;
            }
            set {
                if ((this.AQIField.Equals(value) != true)) {
                    this.AQIField = value;
                    this.RaisePropertyChanged("AQI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CO {
            get {
                return this.COField;
            }
            set {
                if ((this.COField.Equals(value) != true)) {
                    this.COField = value;
                    this.RaisePropertyChanged("CO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CO_Mark {
            get {
                return this.CO_MarkField;
            }
            set {
                if ((object.ReferenceEquals(this.CO_MarkField, value) != true)) {
                    this.CO_MarkField = value;
                    this.RaisePropertyChanged("CO_Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> NO2 {
            get {
                return this.NO2Field;
            }
            set {
                if ((this.NO2Field.Equals(value) != true)) {
                    this.NO2Field = value;
                    this.RaisePropertyChanged("NO2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NO2_Mark {
            get {
                return this.NO2_MarkField;
            }
            set {
                if ((object.ReferenceEquals(this.NO2_MarkField, value) != true)) {
                    this.NO2_MarkField = value;
                    this.RaisePropertyChanged("NO2_Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> O3 {
            get {
                return this.O3Field;
            }
            set {
                if ((this.O3Field.Equals(value) != true)) {
                    this.O3Field = value;
                    this.RaisePropertyChanged("O3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> O3_8h {
            get {
                return this.O3_8hField;
            }
            set {
                if ((this.O3_8hField.Equals(value) != true)) {
                    this.O3_8hField = value;
                    this.RaisePropertyChanged("O3_8h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string O3_8h_Mark {
            get {
                return this.O3_8h_MarkField;
            }
            set {
                if ((object.ReferenceEquals(this.O3_8h_MarkField, value) != true)) {
                    this.O3_8h_MarkField = value;
                    this.RaisePropertyChanged("O3_8h_Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string O3_Mark {
            get {
                return this.O3_MarkField;
            }
            set {
                if ((object.ReferenceEquals(this.O3_MarkField, value) != true)) {
                    this.O3_MarkField = value;
                    this.RaisePropertyChanged("O3_Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PM10 {
            get {
                return this.PM10Field;
            }
            set {
                if ((this.PM10Field.Equals(value) != true)) {
                    this.PM10Field = value;
                    this.RaisePropertyChanged("PM10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM10_Mark {
            get {
                return this.PM10_MarkField;
            }
            set {
                if ((object.ReferenceEquals(this.PM10_MarkField, value) != true)) {
                    this.PM10_MarkField = value;
                    this.RaisePropertyChanged("PM10_Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PM2_5 {
            get {
                return this.PM2_5Field;
            }
            set {
                if ((this.PM2_5Field.Equals(value) != true)) {
                    this.PM2_5Field = value;
                    this.RaisePropertyChanged("PM2_5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM2_5_Mark {
            get {
                return this.PM2_5_MarkField;
            }
            set {
                if ((object.ReferenceEquals(this.PM2_5_MarkField, value) != true)) {
                    this.PM2_5_MarkField = value;
                    this.RaisePropertyChanged("PM2_5_Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryPollutant {
            get {
                return this.PrimaryPollutantField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryPollutantField, value) != true)) {
                    this.PrimaryPollutantField = value;
                    this.RaisePropertyChanged("PrimaryPollutant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> SO2 {
            get {
                return this.SO2Field;
            }
            set {
                if ((this.SO2Field.Equals(value) != true)) {
                    this.SO2Field = value;
                    this.RaisePropertyChanged("SO2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SO2_Mark {
            get {
                return this.SO2_MarkField;
            }
            set {
                if ((object.ReferenceEquals(this.SO2_MarkField, value) != true)) {
                    this.SO2_MarkField = value;
                    this.RaisePropertyChanged("SO2_Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StationCode {
            get {
                return this.StationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StationCodeField, value) != true)) {
                    this.StationCodeField = value;
                    this.RaisePropertyChanged("StationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimePoint {
            get {
                return this.TimePointField;
            }
            set {
                if ((this.TimePointField.Equals(value) != true)) {
                    this.TimePointField = value;
                    this.RaisePropertyChanged("TimePoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Air_Cityday_AQI_Src", Namespace="http://schemas.datacontract.org/2004/07/ForecastDataSystem.Model")]
    [System.SerializableAttribute()]
    public partial class Air_Cityday_AQI_Src : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AQIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> COField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CO_MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> NO2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NO2_MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> O3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> O3_8hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string O3_8h_MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string O3_MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PM10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM10_MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PM2_5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM2_5_MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryPollutantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> SO2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SO2_MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimePointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AQI {
            get {
                return this.AQIField;
            }
            set {
                if ((this.AQIField.Equals(value) != true)) {
                    this.AQIField = value;
                    this.RaisePropertyChanged("AQI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CO {
            get {
                return this.COField;
            }
            set {
                if ((this.COField.Equals(value) != true)) {
                    this.COField = value;
                    this.RaisePropertyChanged("CO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CO_Mark {
            get {
                return this.CO_MarkField;
            }
            set {
                if ((object.ReferenceEquals(this.CO_MarkField, value) != true)) {
                    this.CO_MarkField = value;
                    this.RaisePropertyChanged("CO_Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityCode {
            get {
                return this.CityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityCodeField, value) != true)) {
                    this.CityCodeField = value;
                    this.RaisePropertyChanged("CityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> NO2 {
            get {
                return this.NO2Field;
            }
            set {
                if ((this.NO2Field.Equals(value) != true)) {
                    this.NO2Field = value;
                    this.RaisePropertyChanged("NO2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NO2_Mark {
            get {
                return this.NO2_MarkField;
            }
            set {
                if ((object.ReferenceEquals(this.NO2_MarkField, value) != true)) {
                    this.NO2_MarkField = value;
                    this.RaisePropertyChanged("NO2_Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> O3 {
            get {
                return this.O3Field;
            }
            set {
                if ((this.O3Field.Equals(value) != true)) {
                    this.O3Field = value;
                    this.RaisePropertyChanged("O3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> O3_8h {
            get {
                return this.O3_8hField;
            }
            set {
                if ((this.O3_8hField.Equals(value) != true)) {
                    this.O3_8hField = value;
                    this.RaisePropertyChanged("O3_8h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string O3_8h_Mark {
            get {
                return this.O3_8h_MarkField;
            }
            set {
                if ((object.ReferenceEquals(this.O3_8h_MarkField, value) != true)) {
                    this.O3_8h_MarkField = value;
                    this.RaisePropertyChanged("O3_8h_Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string O3_Mark {
            get {
                return this.O3_MarkField;
            }
            set {
                if ((object.ReferenceEquals(this.O3_MarkField, value) != true)) {
                    this.O3_MarkField = value;
                    this.RaisePropertyChanged("O3_Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PM10 {
            get {
                return this.PM10Field;
            }
            set {
                if ((this.PM10Field.Equals(value) != true)) {
                    this.PM10Field = value;
                    this.RaisePropertyChanged("PM10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM10_Mark {
            get {
                return this.PM10_MarkField;
            }
            set {
                if ((object.ReferenceEquals(this.PM10_MarkField, value) != true)) {
                    this.PM10_MarkField = value;
                    this.RaisePropertyChanged("PM10_Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PM2_5 {
            get {
                return this.PM2_5Field;
            }
            set {
                if ((this.PM2_5Field.Equals(value) != true)) {
                    this.PM2_5Field = value;
                    this.RaisePropertyChanged("PM2_5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM2_5_Mark {
            get {
                return this.PM2_5_MarkField;
            }
            set {
                if ((object.ReferenceEquals(this.PM2_5_MarkField, value) != true)) {
                    this.PM2_5_MarkField = value;
                    this.RaisePropertyChanged("PM2_5_Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryPollutant {
            get {
                return this.PrimaryPollutantField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryPollutantField, value) != true)) {
                    this.PrimaryPollutantField = value;
                    this.RaisePropertyChanged("PrimaryPollutant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> SO2 {
            get {
                return this.SO2Field;
            }
            set {
                if ((this.SO2Field.Equals(value) != true)) {
                    this.SO2Field = value;
                    this.RaisePropertyChanged("SO2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SO2_Mark {
            get {
                return this.SO2_MarkField;
            }
            set {
                if ((object.ReferenceEquals(this.SO2_MarkField, value) != true)) {
                    this.SO2_MarkField = value;
                    this.RaisePropertyChanged("SO2_Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimePoint {
            get {
                return this.TimePointField;
            }
            set {
                if ((this.TimePointField.Equals(value) != true)) {
                    this.TimePointField = value;
                    this.RaisePropertyChanged("TimePoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MeteorologyDataService.IMeteorologyData")]
    public interface IMeteorologyData {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetRealtimeSpiDataLast", ReplyAction="http://tempuri.org/IMeteorologyData/GetRealtimeSpiDataLastResponse")]
        QHAQFWS.Core.MeteorologyDataService.Weather_R_SpiDatum[] GetRealtimeSpiDataLast(string[] cityCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetRealtimeSpiDataLast", ReplyAction="http://tempuri.org/IMeteorologyData/GetRealtimeSpiDataLastResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Weather_R_SpiDatum[]> GetRealtimeSpiDataLastAsync(string[] cityCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetRealtimeSpiData", ReplyAction="http://tempuri.org/IMeteorologyData/GetRealtimeSpiDataResponse")]
        QHAQFWS.Core.MeteorologyDataService.Weather_R_SpiDatum[] GetRealtimeSpiData(string[] cityCodes, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetRealtimeSpiData", ReplyAction="http://tempuri.org/IMeteorologyData/GetRealtimeSpiDataResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Weather_R_SpiDatum[]> GetRealtimeSpiDataAsync(string[] cityCodes, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetHourSpiDataLast", ReplyAction="http://tempuri.org/IMeteorologyData/GetHourSpiDataLastResponse")]
        QHAQFWS.Core.MeteorologyDataService.Weather_H_SpiDatum[] GetHourSpiDataLast(string[] cityCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetHourSpiDataLast", ReplyAction="http://tempuri.org/IMeteorologyData/GetHourSpiDataLastResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Weather_H_SpiDatum[]> GetHourSpiDataLastAsync(string[] cityCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetHourSpiData", ReplyAction="http://tempuri.org/IMeteorologyData/GetHourSpiDataResponse")]
        QHAQFWS.Core.MeteorologyDataService.Weather_H_SpiDatum[] GetHourSpiData(string[] cityCodes, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetHourSpiData", ReplyAction="http://tempuri.org/IMeteorologyData/GetHourSpiDataResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Weather_H_SpiDatum[]> GetHourSpiDataAsync(string[] cityCodes, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetDaySpiDataLast", ReplyAction="http://tempuri.org/IMeteorologyData/GetDaySpiDataLastResponse")]
        QHAQFWS.Core.MeteorologyDataService.Weather_D_SpiDatum[] GetDaySpiDataLast(string[] cityCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetDaySpiDataLast", ReplyAction="http://tempuri.org/IMeteorologyData/GetDaySpiDataLastResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Weather_D_SpiDatum[]> GetDaySpiDataLastAsync(string[] cityCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetDaySpiData", ReplyAction="http://tempuri.org/IMeteorologyData/GetDaySpiDataResponse")]
        QHAQFWS.Core.MeteorologyDataService.Weather_D_SpiDatum[] GetDaySpiData(string[] cityCodes, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetDaySpiData", ReplyAction="http://tempuri.org/IMeteorologyData/GetDaySpiDataResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Weather_D_SpiDatum[]> GetDaySpiDataAsync(string[] cityCodes, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetHourForecastData", ReplyAction="http://tempuri.org/IMeteorologyData/GetHourForecastDataResponse")]
        QHAQFWS.Core.MeteorologyDataService.Weather_H_Forecast[] GetHourForecastData(string[] cityCodes, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetHourForecastData", ReplyAction="http://tempuri.org/IMeteorologyData/GetHourForecastDataResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Weather_H_Forecast[]> GetHourForecastDataAsync(string[] cityCodes, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetDayForecastData", ReplyAction="http://tempuri.org/IMeteorologyData/GetDayForecastDataResponse")]
        QHAQFWS.Core.MeteorologyDataService.City_WeatherForecastInfo[] GetDayForecastData(string[] cityCodes, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetDayForecastData", ReplyAction="http://tempuri.org/IMeteorologyData/GetDayForecastDataResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.City_WeatherForecastInfo[]> GetDayForecastDataAsync(string[] cityCodes, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GDMOTenDaysForecastInfo", ReplyAction="http://tempuri.org/IMeteorologyData/GDMOTenDaysForecastInfoResponse")]
        QHAQFWS.Core.MeteorologyDataService.GDMOTenDay_ForecastInfo GDMOTenDaysForecastInfo(System.DateTime timePoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GDMOTenDaysForecastInfo", ReplyAction="http://tempuri.org/IMeteorologyData/GDMOTenDaysForecastInfoResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.GDMOTenDay_ForecastInfo> GDMOTenDaysForecastInfoAsync(System.DateTime timePoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetImageInfoData", ReplyAction="http://tempuri.org/IMeteorologyData/GetImageInfoDataResponse")]
        QHAQFWS.Core.MeteorologyDataService.ImageSpiQueue[] GetImageInfoData(string imageTypeCode, System.DateTime beginTime, System.DateTime endTime, string fileType, string UTC, string hPa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetImageInfoData", ReplyAction="http://tempuri.org/IMeteorologyData/GetImageInfoDataResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.ImageSpiQueue[]> GetImageInfoDataAsync(string imageTypeCode, System.DateTime beginTime, System.DateTime endTime, string fileType, string UTC, string hPa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetImageAttribute", ReplyAction="http://tempuri.org/IMeteorologyData/GetImageAttributeResponse")]
        System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, string>> GetImageAttribute(string imageTypeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetImageAttribute", ReplyAction="http://tempuri.org/IMeteorologyData/GetImageAttributeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, string>>> GetImageAttributeAsync(string imageTypeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetImageConfig", ReplyAction="http://tempuri.org/IMeteorologyData/GetImageConfigResponse")]
        QHAQFWS.Core.MeteorologyDataService.ImageCommandConfig GetImageConfig(string imageTypeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetImageConfig", ReplyAction="http://tempuri.org/IMeteorologyData/GetImageConfigResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.ImageCommandConfig> GetImageConfigAsync(string imageTypeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetTrajectoryPic", ReplyAction="http://tempuri.org/IMeteorologyData/GetTrajectoryPicResponse")]
        QHAQFWS.Core.MeteorologyDataService.TrajectoryPic[] GetTrajectoryPic(string imageTypeCode, System.DateTime timePoint, string cityCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetTrajectoryPic", ReplyAction="http://tempuri.org/IMeteorologyData/GetTrajectoryPicResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.TrajectoryPic[]> GetTrajectoryPicAsync(string imageTypeCode, System.DateTime timePoint, string cityCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetCityList", ReplyAction="http://tempuri.org/IMeteorologyData/GetCityListResponse")]
        QHAQFWS.Core.MeteorologyDataService.NMCCity[] GetCityList(string cityName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetCityList", ReplyAction="http://tempuri.org/IMeteorologyData/GetCityListResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.NMCCity[]> GetCityListAsync(string cityName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetCityPollutantForecast", ReplyAction="http://tempuri.org/IMeteorologyData/GetCityPollutantForecastResponse")]
        QHAQFWS.Core.MeteorologyDataService.NationCityPollutantForecast[] GetCityPollutantForecast(System.DateTime publishData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetCityPollutantForecast", ReplyAction="http://tempuri.org/IMeteorologyData/GetCityPollutantForecastResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.NationCityPollutantForecast[]> GetCityPollutantForecastAsync(System.DateTime publishData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetCityPollutantForecastBy", ReplyAction="http://tempuri.org/IMeteorologyData/GetCityPollutantForecastByResponse")]
        QHAQFWS.Core.MeteorologyDataService.NationCityPollutantForecast[] GetCityPollutantForecastBy(string[] cityCodes, System.DateTime publishDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetCityPollutantForecastBy", ReplyAction="http://tempuri.org/IMeteorologyData/GetCityPollutantForecastByResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.NationCityPollutantForecast[]> GetCityPollutantForecastByAsync(string[] cityCodes, System.DateTime publishDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetCityPollutantForecastList", ReplyAction="http://tempuri.org/IMeteorologyData/GetCityPollutantForecastListResponse")]
        QHAQFWS.Core.MeteorologyDataService.NationCityPollutantForecast[] GetCityPollutantForecastList(string[] cityCodes, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetCityPollutantForecastList", ReplyAction="http://tempuri.org/IMeteorologyData/GetCityPollutantForecastListResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.NationCityPollutantForecast[]> GetCityPollutantForecastListAsync(string[] cityCodes, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetProvincePollutantForecast", ReplyAction="http://tempuri.org/IMeteorologyData/GetProvincePollutantForecastResponse")]
        QHAQFWS.Core.MeteorologyDataService.NationProvincePollutantForecast[] GetProvincePollutantForecast(System.DateTime publishData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetProvincePollutantForecast", ReplyAction="http://tempuri.org/IMeteorologyData/GetProvincePollutantForecastResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.NationProvincePollutantForecast[]> GetProvincePollutantForecastAsync(System.DateTime publishData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetImageQuantity", ReplyAction="http://tempuri.org/IMeteorologyData/GetImageQuantityResponse")]
        System.Collections.Generic.Dictionary<string, int> GetImageQuantity();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetImageQuantity", ReplyAction="http://tempuri.org/IMeteorologyData/GetImageQuantityResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, int>> GetImageQuantityAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetStationHourDataLive", ReplyAction="http://tempuri.org/IMeteorologyData/GetStationHourDataLiveResponse")]
        QHAQFWS.Core.MeteorologyDataService.StationHourData[] GetStationHourDataLive(System.DateTime timePoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetStationHourDataLive", ReplyAction="http://tempuri.org/IMeteorologyData/GetStationHourDataLiveResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.StationHourData[]> GetStationHourDataLiveAsync(System.DateTime timePoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetStationHourDataLast", ReplyAction="http://tempuri.org/IMeteorologyData/GetStationHourDataLastResponse")]
        QHAQFWS.Core.MeteorologyDataService.StationHourData[] GetStationHourDataLast();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetStationHourDataLast", ReplyAction="http://tempuri.org/IMeteorologyData/GetStationHourDataLastResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.StationHourData[]> GetStationHourDataLastAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetStationHourDataHistory", ReplyAction="http://tempuri.org/IMeteorologyData/GetStationHourDataHistoryResponse")]
        QHAQFWS.Core.MeteorologyDataService.StationHourData[] GetStationHourDataHistory(System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetStationHourDataHistory", ReplyAction="http://tempuri.org/IMeteorologyData/GetStationHourDataHistoryResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.StationHourData[]> GetStationHourDataHistoryAsync(System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetStationHourData", ReplyAction="http://tempuri.org/IMeteorologyData/GetStationHourDataResponse")]
        QHAQFWS.Core.MeteorologyDataService.StationHourData GetStationHourData(string code, System.DateTime timePoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetStationHourData", ReplyAction="http://tempuri.org/IMeteorologyData/GetStationHourDataResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.StationHourData> GetStationHourDataAsync(string code, System.DateTime timePoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetStationHourDataHistoryNew", ReplyAction="http://tempuri.org/IMeteorologyData/GetStationHourDataHistoryNewResponse")]
        QHAQFWS.Core.MeteorologyDataService.StationHourData[] GetStationHourDataHistoryNew(string[] codes, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetStationHourDataHistoryNew", ReplyAction="http://tempuri.org/IMeteorologyData/GetStationHourDataHistoryNewResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.StationHourData[]> GetStationHourDataHistoryNewAsync(string[] codes, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetCityHourDataLive", ReplyAction="http://tempuri.org/IMeteorologyData/GetCityHourDataLiveResponse")]
        QHAQFWS.Core.MeteorologyDataService.CityHourData[] GetCityHourDataLive(System.DateTime timePoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetCityHourDataLive", ReplyAction="http://tempuri.org/IMeteorologyData/GetCityHourDataLiveResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.CityHourData[]> GetCityHourDataLiveAsync(System.DateTime timePoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetCityHourDataLast", ReplyAction="http://tempuri.org/IMeteorologyData/GetCityHourDataLastResponse")]
        QHAQFWS.Core.MeteorologyDataService.CityHourData[] GetCityHourDataLast();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetCityHourDataLast", ReplyAction="http://tempuri.org/IMeteorologyData/GetCityHourDataLastResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.CityHourData[]> GetCityHourDataLastAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetCityHourDataHistory", ReplyAction="http://tempuri.org/IMeteorologyData/GetCityHourDataHistoryResponse")]
        QHAQFWS.Core.MeteorologyDataService.CityHourData[] GetCityHourDataHistory(System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetCityHourDataHistory", ReplyAction="http://tempuri.org/IMeteorologyData/GetCityHourDataHistoryResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.CityHourData[]> GetCityHourDataHistoryAsync(System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetCityHourData", ReplyAction="http://tempuri.org/IMeteorologyData/GetCityHourDataResponse")]
        QHAQFWS.Core.MeteorologyDataService.CityHourData GetCityHourData(int code, System.DateTime timePoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetCityHourData", ReplyAction="http://tempuri.org/IMeteorologyData/GetCityHourDataResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.CityHourData> GetCityHourDataAsync(int code, System.DateTime timePoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetCityDayDataLive", ReplyAction="http://tempuri.org/IMeteorologyData/GetCityDayDataLiveResponse")]
        QHAQFWS.Core.MeteorologyDataService.CityDayData[] GetCityDayDataLive(System.DateTime timePoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetCityDayDataLive", ReplyAction="http://tempuri.org/IMeteorologyData/GetCityDayDataLiveResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.CityDayData[]> GetCityDayDataLiveAsync(System.DateTime timePoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetCityDayDataLast", ReplyAction="http://tempuri.org/IMeteorologyData/GetCityDayDataLastResponse")]
        QHAQFWS.Core.MeteorologyDataService.CityDayData[] GetCityDayDataLast();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetCityDayDataLast", ReplyAction="http://tempuri.org/IMeteorologyData/GetCityDayDataLastResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.CityDayData[]> GetCityDayDataLastAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetCityDayDataHistory", ReplyAction="http://tempuri.org/IMeteorologyData/GetCityDayDataHistoryResponse")]
        QHAQFWS.Core.MeteorologyDataService.CityDayData[] GetCityDayDataHistory(System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetCityDayDataHistory", ReplyAction="http://tempuri.org/IMeteorologyData/GetCityDayDataHistoryResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.CityDayData[]> GetCityDayDataHistoryAsync(System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetCityDayData", ReplyAction="http://tempuri.org/IMeteorologyData/GetCityDayDataResponse")]
        QHAQFWS.Core.MeteorologyDataService.CityDayData GetCityDayData(int code, System.DateTime timePoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetCityDayData", ReplyAction="http://tempuri.org/IMeteorologyData/GetCityDayDataResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.CityDayData> GetCityDayDataAsync(int code, System.DateTime timePoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetAir_hour_AQI_Src", ReplyAction="http://tempuri.org/IMeteorologyData/GetAir_hour_AQI_SrcResponse")]
        QHAQFWS.Core.MeteorologyDataService.Air_hour_AQI_Src GetAir_hour_AQI_Src(string code, System.DateTime time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetAir_hour_AQI_Src", ReplyAction="http://tempuri.org/IMeteorologyData/GetAir_hour_AQI_SrcResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Air_hour_AQI_Src> GetAir_hour_AQI_SrcAsync(string code, System.DateTime time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetAir_hour_AQI_SrcList", ReplyAction="http://tempuri.org/IMeteorologyData/GetAir_hour_AQI_SrcListResponse")]
        QHAQFWS.Core.MeteorologyDataService.Air_hour_AQI_Src[] GetAir_hour_AQI_SrcList(string code, System.DateTime beginTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetAir_hour_AQI_SrcList", ReplyAction="http://tempuri.org/IMeteorologyData/GetAir_hour_AQI_SrcListResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Air_hour_AQI_Src[]> GetAir_hour_AQI_SrcListAsync(string code, System.DateTime beginTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetAir_hour_AQI_SrcListByTime", ReplyAction="http://tempuri.org/IMeteorologyData/GetAir_hour_AQI_SrcListByTimeResponse")]
        QHAQFWS.Core.MeteorologyDataService.Air_hour_AQI_Src[] GetAir_hour_AQI_SrcListByTime(System.DateTime time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetAir_hour_AQI_SrcListByTime", ReplyAction="http://tempuri.org/IMeteorologyData/GetAir_hour_AQI_SrcListByTimeResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Air_hour_AQI_Src[]> GetAir_hour_AQI_SrcListByTimeAsync(System.DateTime time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetAir_day_AQI_Src", ReplyAction="http://tempuri.org/IMeteorologyData/GetAir_day_AQI_SrcResponse")]
        QHAQFWS.Core.MeteorologyDataService.Air_day_AQI_Src GetAir_day_AQI_Src(string code, System.DateTime time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetAir_day_AQI_Src", ReplyAction="http://tempuri.org/IMeteorologyData/GetAir_day_AQI_SrcResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Air_day_AQI_Src> GetAir_day_AQI_SrcAsync(string code, System.DateTime time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetAir_day_AQI_SrcList", ReplyAction="http://tempuri.org/IMeteorologyData/GetAir_day_AQI_SrcListResponse")]
        QHAQFWS.Core.MeteorologyDataService.Air_day_AQI_Src[] GetAir_day_AQI_SrcList(string code, System.DateTime beginTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetAir_day_AQI_SrcList", ReplyAction="http://tempuri.org/IMeteorologyData/GetAir_day_AQI_SrcListResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Air_day_AQI_Src[]> GetAir_day_AQI_SrcListAsync(string code, System.DateTime beginTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetAir_day_AQI_SrcListByTime", ReplyAction="http://tempuri.org/IMeteorologyData/GetAir_day_AQI_SrcListByTimeResponse")]
        QHAQFWS.Core.MeteorologyDataService.Air_day_AQI_Src[] GetAir_day_AQI_SrcListByTime(System.DateTime time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetAir_day_AQI_SrcListByTime", ReplyAction="http://tempuri.org/IMeteorologyData/GetAir_day_AQI_SrcListByTimeResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Air_day_AQI_Src[]> GetAir_day_AQI_SrcListByTimeAsync(System.DateTime time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetAir_Cityday_AQI_Src", ReplyAction="http://tempuri.org/IMeteorologyData/GetAir_Cityday_AQI_SrcResponse")]
        QHAQFWS.Core.MeteorologyDataService.Air_Cityday_AQI_Src GetAir_Cityday_AQI_Src(string code, System.DateTime time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetAir_Cityday_AQI_Src", ReplyAction="http://tempuri.org/IMeteorologyData/GetAir_Cityday_AQI_SrcResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Air_Cityday_AQI_Src> GetAir_Cityday_AQI_SrcAsync(string code, System.DateTime time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetAir_Cityday_AQI_SrcList", ReplyAction="http://tempuri.org/IMeteorologyData/GetAir_Cityday_AQI_SrcListResponse")]
        QHAQFWS.Core.MeteorologyDataService.Air_Cityday_AQI_Src[] GetAir_Cityday_AQI_SrcList(string code, System.DateTime beginTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetAir_Cityday_AQI_SrcList", ReplyAction="http://tempuri.org/IMeteorologyData/GetAir_Cityday_AQI_SrcListResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Air_Cityday_AQI_Src[]> GetAir_Cityday_AQI_SrcListAsync(string code, System.DateTime beginTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetAir_Cityday_AQI_SrcListByTime", ReplyAction="http://tempuri.org/IMeteorologyData/GetAir_Cityday_AQI_SrcListByTimeResponse")]
        QHAQFWS.Core.MeteorologyDataService.Air_Cityday_AQI_Src[] GetAir_Cityday_AQI_SrcListByTime(System.DateTime time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeteorologyData/GetAir_Cityday_AQI_SrcListByTime", ReplyAction="http://tempuri.org/IMeteorologyData/GetAir_Cityday_AQI_SrcListByTimeResponse")]
        System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Air_Cityday_AQI_Src[]> GetAir_Cityday_AQI_SrcListByTimeAsync(System.DateTime time);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMeteorologyDataChannel : QHAQFWS.Core.MeteorologyDataService.IMeteorologyData, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MeteorologyDataClient : System.ServiceModel.ClientBase<QHAQFWS.Core.MeteorologyDataService.IMeteorologyData>, QHAQFWS.Core.MeteorologyDataService.IMeteorologyData {
        
        public MeteorologyDataClient() {
        }
        
        public MeteorologyDataClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MeteorologyDataClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MeteorologyDataClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MeteorologyDataClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public QHAQFWS.Core.MeteorologyDataService.Weather_R_SpiDatum[] GetRealtimeSpiDataLast(string[] cityCodes) {
            return base.Channel.GetRealtimeSpiDataLast(cityCodes);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Weather_R_SpiDatum[]> GetRealtimeSpiDataLastAsync(string[] cityCodes) {
            return base.Channel.GetRealtimeSpiDataLastAsync(cityCodes);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.Weather_R_SpiDatum[] GetRealtimeSpiData(string[] cityCodes, System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetRealtimeSpiData(cityCodes, startTime, endTime);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Weather_R_SpiDatum[]> GetRealtimeSpiDataAsync(string[] cityCodes, System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetRealtimeSpiDataAsync(cityCodes, startTime, endTime);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.Weather_H_SpiDatum[] GetHourSpiDataLast(string[] cityCodes) {
            return base.Channel.GetHourSpiDataLast(cityCodes);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Weather_H_SpiDatum[]> GetHourSpiDataLastAsync(string[] cityCodes) {
            return base.Channel.GetHourSpiDataLastAsync(cityCodes);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.Weather_H_SpiDatum[] GetHourSpiData(string[] cityCodes, System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetHourSpiData(cityCodes, startTime, endTime);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Weather_H_SpiDatum[]> GetHourSpiDataAsync(string[] cityCodes, System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetHourSpiDataAsync(cityCodes, startTime, endTime);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.Weather_D_SpiDatum[] GetDaySpiDataLast(string[] cityCodes) {
            return base.Channel.GetDaySpiDataLast(cityCodes);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Weather_D_SpiDatum[]> GetDaySpiDataLastAsync(string[] cityCodes) {
            return base.Channel.GetDaySpiDataLastAsync(cityCodes);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.Weather_D_SpiDatum[] GetDaySpiData(string[] cityCodes, System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetDaySpiData(cityCodes, startTime, endTime);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Weather_D_SpiDatum[]> GetDaySpiDataAsync(string[] cityCodes, System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetDaySpiDataAsync(cityCodes, startTime, endTime);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.Weather_H_Forecast[] GetHourForecastData(string[] cityCodes, System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetHourForecastData(cityCodes, startTime, endTime);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Weather_H_Forecast[]> GetHourForecastDataAsync(string[] cityCodes, System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetHourForecastDataAsync(cityCodes, startTime, endTime);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.City_WeatherForecastInfo[] GetDayForecastData(string[] cityCodes, System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetDayForecastData(cityCodes, startTime, endTime);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.City_WeatherForecastInfo[]> GetDayForecastDataAsync(string[] cityCodes, System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetDayForecastDataAsync(cityCodes, startTime, endTime);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.GDMOTenDay_ForecastInfo GDMOTenDaysForecastInfo(System.DateTime timePoint) {
            return base.Channel.GDMOTenDaysForecastInfo(timePoint);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.GDMOTenDay_ForecastInfo> GDMOTenDaysForecastInfoAsync(System.DateTime timePoint) {
            return base.Channel.GDMOTenDaysForecastInfoAsync(timePoint);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.ImageSpiQueue[] GetImageInfoData(string imageTypeCode, System.DateTime beginTime, System.DateTime endTime, string fileType, string UTC, string hPa) {
            return base.Channel.GetImageInfoData(imageTypeCode, beginTime, endTime, fileType, UTC, hPa);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.ImageSpiQueue[]> GetImageInfoDataAsync(string imageTypeCode, System.DateTime beginTime, System.DateTime endTime, string fileType, string UTC, string hPa) {
            return base.Channel.GetImageInfoDataAsync(imageTypeCode, beginTime, endTime, fileType, UTC, hPa);
        }
        
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, string>> GetImageAttribute(string imageTypeCode) {
            return base.Channel.GetImageAttribute(imageTypeCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, string>>> GetImageAttributeAsync(string imageTypeCode) {
            return base.Channel.GetImageAttributeAsync(imageTypeCode);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.ImageCommandConfig GetImageConfig(string imageTypeCode) {
            return base.Channel.GetImageConfig(imageTypeCode);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.ImageCommandConfig> GetImageConfigAsync(string imageTypeCode) {
            return base.Channel.GetImageConfigAsync(imageTypeCode);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.TrajectoryPic[] GetTrajectoryPic(string imageTypeCode, System.DateTime timePoint, string cityCode) {
            return base.Channel.GetTrajectoryPic(imageTypeCode, timePoint, cityCode);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.TrajectoryPic[]> GetTrajectoryPicAsync(string imageTypeCode, System.DateTime timePoint, string cityCode) {
            return base.Channel.GetTrajectoryPicAsync(imageTypeCode, timePoint, cityCode);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.NMCCity[] GetCityList(string cityName) {
            return base.Channel.GetCityList(cityName);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.NMCCity[]> GetCityListAsync(string cityName) {
            return base.Channel.GetCityListAsync(cityName);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.NationCityPollutantForecast[] GetCityPollutantForecast(System.DateTime publishData) {
            return base.Channel.GetCityPollutantForecast(publishData);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.NationCityPollutantForecast[]> GetCityPollutantForecastAsync(System.DateTime publishData) {
            return base.Channel.GetCityPollutantForecastAsync(publishData);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.NationCityPollutantForecast[] GetCityPollutantForecastBy(string[] cityCodes, System.DateTime publishDate) {
            return base.Channel.GetCityPollutantForecastBy(cityCodes, publishDate);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.NationCityPollutantForecast[]> GetCityPollutantForecastByAsync(string[] cityCodes, System.DateTime publishDate) {
            return base.Channel.GetCityPollutantForecastByAsync(cityCodes, publishDate);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.NationCityPollutantForecast[] GetCityPollutantForecastList(string[] cityCodes, System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetCityPollutantForecastList(cityCodes, startTime, endTime);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.NationCityPollutantForecast[]> GetCityPollutantForecastListAsync(string[] cityCodes, System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetCityPollutantForecastListAsync(cityCodes, startTime, endTime);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.NationProvincePollutantForecast[] GetProvincePollutantForecast(System.DateTime publishData) {
            return base.Channel.GetProvincePollutantForecast(publishData);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.NationProvincePollutantForecast[]> GetProvincePollutantForecastAsync(System.DateTime publishData) {
            return base.Channel.GetProvincePollutantForecastAsync(publishData);
        }
        
        public System.Collections.Generic.Dictionary<string, int> GetImageQuantity() {
            return base.Channel.GetImageQuantity();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, int>> GetImageQuantityAsync() {
            return base.Channel.GetImageQuantityAsync();
        }
        
        public QHAQFWS.Core.MeteorologyDataService.StationHourData[] GetStationHourDataLive(System.DateTime timePoint) {
            return base.Channel.GetStationHourDataLive(timePoint);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.StationHourData[]> GetStationHourDataLiveAsync(System.DateTime timePoint) {
            return base.Channel.GetStationHourDataLiveAsync(timePoint);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.StationHourData[] GetStationHourDataLast() {
            return base.Channel.GetStationHourDataLast();
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.StationHourData[]> GetStationHourDataLastAsync() {
            return base.Channel.GetStationHourDataLastAsync();
        }
        
        public QHAQFWS.Core.MeteorologyDataService.StationHourData[] GetStationHourDataHistory(System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetStationHourDataHistory(startTime, endTime);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.StationHourData[]> GetStationHourDataHistoryAsync(System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetStationHourDataHistoryAsync(startTime, endTime);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.StationHourData GetStationHourData(string code, System.DateTime timePoint) {
            return base.Channel.GetStationHourData(code, timePoint);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.StationHourData> GetStationHourDataAsync(string code, System.DateTime timePoint) {
            return base.Channel.GetStationHourDataAsync(code, timePoint);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.StationHourData[] GetStationHourDataHistoryNew(string[] codes, System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetStationHourDataHistoryNew(codes, startTime, endTime);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.StationHourData[]> GetStationHourDataHistoryNewAsync(string[] codes, System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetStationHourDataHistoryNewAsync(codes, startTime, endTime);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.CityHourData[] GetCityHourDataLive(System.DateTime timePoint) {
            return base.Channel.GetCityHourDataLive(timePoint);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.CityHourData[]> GetCityHourDataLiveAsync(System.DateTime timePoint) {
            return base.Channel.GetCityHourDataLiveAsync(timePoint);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.CityHourData[] GetCityHourDataLast() {
            return base.Channel.GetCityHourDataLast();
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.CityHourData[]> GetCityHourDataLastAsync() {
            return base.Channel.GetCityHourDataLastAsync();
        }
        
        public QHAQFWS.Core.MeteorologyDataService.CityHourData[] GetCityHourDataHistory(System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetCityHourDataHistory(startTime, endTime);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.CityHourData[]> GetCityHourDataHistoryAsync(System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetCityHourDataHistoryAsync(startTime, endTime);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.CityHourData GetCityHourData(int code, System.DateTime timePoint) {
            return base.Channel.GetCityHourData(code, timePoint);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.CityHourData> GetCityHourDataAsync(int code, System.DateTime timePoint) {
            return base.Channel.GetCityHourDataAsync(code, timePoint);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.CityDayData[] GetCityDayDataLive(System.DateTime timePoint) {
            return base.Channel.GetCityDayDataLive(timePoint);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.CityDayData[]> GetCityDayDataLiveAsync(System.DateTime timePoint) {
            return base.Channel.GetCityDayDataLiveAsync(timePoint);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.CityDayData[] GetCityDayDataLast() {
            return base.Channel.GetCityDayDataLast();
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.CityDayData[]> GetCityDayDataLastAsync() {
            return base.Channel.GetCityDayDataLastAsync();
        }
        
        public QHAQFWS.Core.MeteorologyDataService.CityDayData[] GetCityDayDataHistory(System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetCityDayDataHistory(startTime, endTime);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.CityDayData[]> GetCityDayDataHistoryAsync(System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetCityDayDataHistoryAsync(startTime, endTime);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.CityDayData GetCityDayData(int code, System.DateTime timePoint) {
            return base.Channel.GetCityDayData(code, timePoint);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.CityDayData> GetCityDayDataAsync(int code, System.DateTime timePoint) {
            return base.Channel.GetCityDayDataAsync(code, timePoint);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.Air_hour_AQI_Src GetAir_hour_AQI_Src(string code, System.DateTime time) {
            return base.Channel.GetAir_hour_AQI_Src(code, time);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Air_hour_AQI_Src> GetAir_hour_AQI_SrcAsync(string code, System.DateTime time) {
            return base.Channel.GetAir_hour_AQI_SrcAsync(code, time);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.Air_hour_AQI_Src[] GetAir_hour_AQI_SrcList(string code, System.DateTime beginTime, System.DateTime endTime) {
            return base.Channel.GetAir_hour_AQI_SrcList(code, beginTime, endTime);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Air_hour_AQI_Src[]> GetAir_hour_AQI_SrcListAsync(string code, System.DateTime beginTime, System.DateTime endTime) {
            return base.Channel.GetAir_hour_AQI_SrcListAsync(code, beginTime, endTime);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.Air_hour_AQI_Src[] GetAir_hour_AQI_SrcListByTime(System.DateTime time) {
            return base.Channel.GetAir_hour_AQI_SrcListByTime(time);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Air_hour_AQI_Src[]> GetAir_hour_AQI_SrcListByTimeAsync(System.DateTime time) {
            return base.Channel.GetAir_hour_AQI_SrcListByTimeAsync(time);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.Air_day_AQI_Src GetAir_day_AQI_Src(string code, System.DateTime time) {
            return base.Channel.GetAir_day_AQI_Src(code, time);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Air_day_AQI_Src> GetAir_day_AQI_SrcAsync(string code, System.DateTime time) {
            return base.Channel.GetAir_day_AQI_SrcAsync(code, time);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.Air_day_AQI_Src[] GetAir_day_AQI_SrcList(string code, System.DateTime beginTime, System.DateTime endTime) {
            return base.Channel.GetAir_day_AQI_SrcList(code, beginTime, endTime);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Air_day_AQI_Src[]> GetAir_day_AQI_SrcListAsync(string code, System.DateTime beginTime, System.DateTime endTime) {
            return base.Channel.GetAir_day_AQI_SrcListAsync(code, beginTime, endTime);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.Air_day_AQI_Src[] GetAir_day_AQI_SrcListByTime(System.DateTime time) {
            return base.Channel.GetAir_day_AQI_SrcListByTime(time);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Air_day_AQI_Src[]> GetAir_day_AQI_SrcListByTimeAsync(System.DateTime time) {
            return base.Channel.GetAir_day_AQI_SrcListByTimeAsync(time);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.Air_Cityday_AQI_Src GetAir_Cityday_AQI_Src(string code, System.DateTime time) {
            return base.Channel.GetAir_Cityday_AQI_Src(code, time);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Air_Cityday_AQI_Src> GetAir_Cityday_AQI_SrcAsync(string code, System.DateTime time) {
            return base.Channel.GetAir_Cityday_AQI_SrcAsync(code, time);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.Air_Cityday_AQI_Src[] GetAir_Cityday_AQI_SrcList(string code, System.DateTime beginTime, System.DateTime endTime) {
            return base.Channel.GetAir_Cityday_AQI_SrcList(code, beginTime, endTime);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Air_Cityday_AQI_Src[]> GetAir_Cityday_AQI_SrcListAsync(string code, System.DateTime beginTime, System.DateTime endTime) {
            return base.Channel.GetAir_Cityday_AQI_SrcListAsync(code, beginTime, endTime);
        }
        
        public QHAQFWS.Core.MeteorologyDataService.Air_Cityday_AQI_Src[] GetAir_Cityday_AQI_SrcListByTime(System.DateTime time) {
            return base.Channel.GetAir_Cityday_AQI_SrcListByTime(time);
        }
        
        public System.Threading.Tasks.Task<QHAQFWS.Core.MeteorologyDataService.Air_Cityday_AQI_Src[]> GetAir_Cityday_AQI_SrcListByTimeAsync(System.DateTime time) {
            return base.Channel.GetAir_Cityday_AQI_SrcListByTimeAsync(time);
        }
    }
}
